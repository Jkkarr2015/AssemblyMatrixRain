Microsoft (R) Macro Assembler Version 11.00.61030.0	    04/13/15 15:40:05
main.asm						     Page 1 - 1




				; Description: Matrix Rain
				; 
				; Revision date: 2/13/2015

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE Macros.inc
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data

 00000000 00000000		randPos dword ?		;Random int for 1 and 0 X position
 00000004 00 00 00 00 00	yArray byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0				;Y for coordinate
	   00 00 00 00 00
	   00 00 00 00 00
 00000013 00 00 00 00 00	xArray byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	   00 00 00 00 00
	   00 00 00 00 00
 00000022 30 30 30 30 30	rainArray byte '0','0','0','0','0','0','0','0','0','0','0','0','0','0','0'
	   30 30 30 30 30
	   30 30 30 30 30
 00000031 4D 61 74 72 69	titleStr byte "Matrix Rain",0				;Title
	   78 20 52 61 69
	   6E 00
 0000003D 17			beginX byte 23 
 0000003E 59 6F 75 20 77	deathMessage byte "You were hit!...",0
	   65 72 65 20 68
	   69 74 21 2E 2E
	   2E 00
 0000004F 50 6C 61 79 20	replay byte "Play Again? (Y/N)",0
	   41 67 61 69 6E
	   3F 20 28 59 2F
	   4E 29 00
 00000061 00			response byte 0; Response to yes or no for replay


 00000062 00000000		outHandle Handle 0

				;BufferBounds COORD <46,25>
 00000066 0000 0000 002D	WindowRect Small_Rect <0,0,45,24>;Left, top, right, and bottom bounds for window size
	   0018
 00000000			.code

 00000000			main PROC
					   INVOKE GetStdHandle,STD_OUTPUT_HANDLE
 00000007  A3 00000062 R		   mov outHandle,eax

					   ;INVOKE SetConsoleScreenBufferSize,outHandle,BufferBounds			;Set console buffer size bounds to X:45 and Y:24 

					   INVOKE SetConsoleWindowInfo,outHandle,TRUE,ADDR WindowRect			;Set console window to coordinates of Size variable
					  
					   INVOKE SetConsoleTitle, ADDR titleStr	;calls the title

 00000028  B8 00000002			   mov eax,green + (black * 16);Green Text, black background
 0000002D  E8 00000000 E		   call SetTextColor      ;Sets the color
 00000032  33 C0			   XOR eax,eax            ;clear eax
 00000034  E8 00000000 E		   call clrscr
 00000039  E8 00000118			   call StartPosition
					  
					   
 0000003E  6A 0F			   push 15
 00000040  68 00000013 R		   push offset xArray
 00000045  6A 2D			   push 45
 00000047  E8 00000038			   call FillArray
 0000004C  83 C4 0C			   add esp,12
					  
 0000004F  6A 0F			   push 15
 00000051  68 00000022 R		   push offset rainArray
 00000056  6A 01			   push 1
 00000058  E8 00000027			   call FillArray
 0000005D  83 C4 0C			   add esp,12

 00000060			KeyLoop:;Die to break the loop
 00000060  E8 00000043			   call checkY
 00000065  E8 0000007C			   call fall             ;call fall proc
 0000006A  E8 00000000 E		   call ReadKey          ; looks for keyboard input
 0000006F  74 EF			   jz KeyLoop

 00000071  E8 0000009A			   call RightIf
 00000076  E8 000000AF			   call LeftIf
						
 0000007B  EB E3			   jmp KeyLoop
 0000007D			EndLoop:

					   exit
 00000084			main ENDP


 00000084			FillArray proc uses ecx       ; Parameters (Number of elements,Offset Array, Range for numbers) made by John K
 00000085  55				    push ebp             ; Pushing it to access parameters from stack
 00000086  8B EC			    mov ebp, esp
 00000088  E8 00000000 E		    call Randomize	       ;Makes RandomRange random based on time of day 
 0000008D  8B 4D 14			    mov ecx, [ebp + 20]  ; Moves first parameter that will be the number for the counter

 00000090  8B 7D 10			    mov edi, [ebp + 16]  ; Offset of array put into edi
 00000093			L1: 
 00000093  83 F9 00			    cmp ecx ,0           ; Loop for setting entire array with random values
 00000096  74 0D			    je endL1
 00000098  8B 45 0C			    mov eax,[ebp + 12]    ; Range Paramet put into eax
 0000009B  E8 00000000 E		    call RandomRange
 000000A0  FC				    cld                  ; Set direction to forward for the array intialization
 000000A1  AA				    stosb                ; Stores contents of eax into array
 000000A2  49				    dec ecx              ; decrements counter
 000000A3  EB EE			    jmp L1
 000000A5			endL1:

 000000A5  5D				    pop ebp              ; restores Ebp
					    
					    ret
 000000A8			FillArray endp
				;---------------------------------------------------------------------------------------------------------------------

 000000A8			checkY PROC ;proc to check y-coordinate Proc by Kilian
 000000A8  BE 00000000				mov esi,0
 000000AD			CheckAll:
 000000AD  83 FE 0E				cmp esi,14
 000000B0  77 33				ja  EndCheck

						
 000000B2  8A 86 00000004 R			mov al,yArray[esi]

 000000B8  3C 17				cmp al,23d           ;see if rain hits the ground
 000000BA  74 02			     je  _there
 000000BC  EB 27			     jmp _endif1
 000000BE			_there:
 000000BE  E8 00000118			     call Death
 000000C3  6A 0F			     push 15
 000000C5  68 00000022 R			push offset rainArray
 000000CA  6A 01				push 1
 000000CC  E8 FFFFFFB3				call FillArray         ;make new piece of rain
 000000D1  83 C4 0C			     add esp,12

 000000D4  6A 0F				push 15
 000000D6  68 00000013 R			push offset xArray
 000000DB  6A 2D				push 45
 000000DD  E8 FFFFFFA2				call FillArray         ;make new starting X-coord
 000000E2  83 C4 0C				add esp,12
 000000E5			_endif1:
 000000E5			EndCheck:
 000000E5  C3					ret
 000000E6			checkY ENDP ;end checkY proc

				;---------------------------------------------------------------------------------------------------------------------

 000000E6			fall PROC ;proc for moving pieces downProc by Kilian	
 000000E6  B8 00000032				mov eax,50 		 ; delay time ms
 000000EB  E8 00000000 E			call Delay		 ;So we can see change speed 
 000000F0  BE 00000000				mov esi,0
 000000F5			All:
 000000F5  83 FE 0E				cmp esi,14
 000000F8  77 10				ja  EndAll
 000000FA  BB 00000004 R			mov ebx,offset yArray
 000000FF  8A 04 1E				mov al,[ebx+esi]
 00000102  FE C0				inc al		 ;increment y coordinate
 00000104  88 04 1E				mov [ebx+esi],al 
					     
 00000107  46					inc esi
 00000108  EB EB				jmp All
 0000010A			EndAll:	     
 0000010A  E8 00000065			     call print
 0000010F  C3					ret
 00000110			fall ENDP;End move proc

				;---------------------------------------------------------------------------------------------------------------------

 00000110			RightIf PROC USES edx;John Proc
 00000111  80 FC 4D			     cmp ah , 4Dh
 00000114  74 02			     je Then1
 00000116  EB 10		          jmp endright           ; Jmp to end of proc

 00000118			Then1: 
 00000118  FE 05 0000003D R			inc beginX             ; Increments X coordinate value	
 0000011E  E8 00000051			     call print
 00000123  E8 00000000 E			call ReadKeyFlush 
					
 00000128			endright:
					     
						ret
 0000012A			 RightIf ENDP

				 ;---------------------------------------------------------------------------------------------------------------------
				 
 0000012A			 LeftIf PROC USES edx;John Proc
 0000012B  80 FC 4B			     cmp ah, 4Bh
 0000012E  74 02			     je Then2
 00000130  EB 22			     jmp endleft             ; Jmp to end of loop if user put in value that is not 3 or left arrow
 00000132			Then2:
 00000132  FE 0D 0000003D R		     dec beginX              ; Decrements X to move to the left
 00000138			if6:      
 00000138  80 3D 0000003D R	          cmp beginX, 0           ; check if X goes under 0
	   00
 0000013F  7C 02			     jl then6
 00000141  EB 07			     jmp end6

 00000143			then6: 
 00000143  C6 05 0000003D R		     mov beginX, 0
	   00
 0000014A			end6:	
				      
 0000014A  E8 00000025			     call print
 0000014F  E8 00000000 E		     call ReadKeyFlush       ;Flushes keyboard input buffer and clears internal counter for faster response time
 00000154			endleft:
					 
					     ret
 00000156			 LeftIf ENDP

				 ;------------------------------------------------------------------------------------------------------------------------

				 
 00000156			 StartPosition PROC USES edx;John Proc
					     ;Player Starting Point
 00000157  B6 17			     mov dh , 23d            ; column 24
 00000159  8A 15 0000003D R		     mov dl,beginX           ; row 39
 0000015F  E8 00000000 E		     call Gotoxy             ; places cursor in the middle of the bottom part of the console window
 00000164  B0 58			     mov al,'X'              ; Copies player character to the AL register to be printed
 00000166  E8 00000000 E		     call WriteChar          ; Prints player to screen console
 0000016B  E8 00000000 E		     call crlf
					     ;Player Starting point
 00000170  32 C0			     Xor al, al
					     
						ret
 00000174			 StartPosition ENDP

				;------------------------------------------------------------------------------------------------------------------------


				;******* proc to make it easier to reprint the rain;Kilian Proc

 00000174			print PROC 
 00000174  E8 00000000 E			call clrscr
 00000179  55					push ebp
 0000017A  BE 00000000				mov esi,0
 0000017F			PrintAll:
 0000017F  83 FE 0E				cmp esi,14
 00000182  77 55				ja  EndPrint
 00000184  BB 00000013 R			mov ebx,offset xArray
 00000189  8A 04 1E				mov al,[ebx+esi]
						
 0000018C  BD 00000004 R			mov ebp,offset yArray
 00000191  8A 24 2E				mov ah,[ebp+esi]
						mGotoxy al,ah            ;Moves cursor to the position of rain
 00000194  52		     1		push edx
 00000195  8A F4	     1		mov  dh,ah
 00000197  8A D0	     1		mov  dl,al
 00000199  E8 00000000 E     1		call Gotoxy
 0000019E  5A		     1		pop  edx
						
 0000019F  BF 00000022 R			mov edi,offset rainArray
 000001A4  8A 04 3E				mov al,[edi+esi]
 000001A7  E8 00000000 E			call WriteChar          ;Rewrite rain
 000001AC  46				     inc esi
						
 000001AD  B6 17				mov dh,23d              ;move cursor to character's current position ********* Added to this version by Killian edited by John
 000001AF  8A 15 0000003D R			mov dl , beginX
 000001B5			if5: 
 000001B5  80 3D 0000003D R			cmp beginX, 79          ; check if X goes past 79
	   4F
 000001BC  7F 02				jg then5
 000001BE  EB 04				jmp end5

 000001C0			then5: 
 000001C0  B2 4E				mov dl, 78d
 000001C2  B6 17				mov dh, 23d
 000001C4			end5:
 000001C4  E8 00000000 E			call Gotoxy
 000001C9  B0 58				mov al,'X'              ;move X into al                              *********
 000001CB  E8 00000000 E			call WriteChar          ;print it					**********
 000001D0  E8 00000000 E			call Crlf
 000001D5  32 C0				xor al,al               ;clear 
 000001D7  EB A6				jmp PrintAll
 000001D9			EndPrint:
 000001D9  5D					pop ebp
 000001DA  C3					ret
 000001DB			print		ENDP

				;----------------------------------------------------------------------------------------------------------------------

 000001DB			Death Proc Uses edx eax ; Added by John Descrpition: Checks where the nummber is and if it is above then X char.
 000001DD  BE 00000000				mov esi,0
 000001E2			CheckAll:
 000001E2			If4:
 000001E2  A0 0000003D R			mov al , beginX         ; Moves the Character's X coordinate into eax for cmp
 000001E7  80 FC 0E				cmp ah,14
 000001EA  0F 87 00000082			ja  EndCheck
 000001F0  BB 00000013 R			mov ebx,offset xArray
 000001F5  8A 24 1E				mov ah,[ebx+esi]

 000001F8  3A C4				cmp al , ah
 000001FA  74 02				je then4
 000001FC  EB 67				jmp yes
 000001FE			then4:
 000001FE  E8 00000000 E			call Clrscr
 00000203  B6 0C				mov dh, 12
 00000205  B2 21				mov dl, 33
 00000207  E8 00000000 E			call Gotoxy             ; Sets cursor to print kill message
 0000020C  BA 0000003E R			mov edx, offset deathmessage
 00000211  E8 00000000 E			call WriteString        ; Displays deathmessage
 00000216  E8 00000000 E			call Crlf
 0000021B  33 C0				XOR eax,eax             ; clears eax for the yes/no loop

 0000021D			loop1:
 0000021D  80 3D 00000061 R			cmp response , 0
	   00
 00000224  75 1F				jne answer	
 00000226  B2 21				mov dl,33
 00000228  B6 0D				mov dh,13
 0000022A  E8 00000000 E			call Gotoxy
 0000022F  BA 0000004F R			mov edx, offset replay
 00000234  E8 00000000 E			call WriteString
 00000239  E8 00000000 E			call Readchar
 0000023E  A2 00000061 R			mov response, al
 00000243  EB D8				jmp loop1

 00000245			answer:
 00000245  80 0D 00000061 R			Or response, 00100000B ; bitmask for lowercase conversion
	   20
 0000024C  80 3D 00000061 R			cmp response, 'y'      ; Yes reponse
	   79
 00000253  74 10				je yes

 00000255  B6 18				mov dh, 24
 00000257  B2 00			     mov dl, 0
 00000259  E8 00000000 E			call Gotoxy
					
						exit                   ; Exits if al is not 'y'
						
 00000265			yes:
					
 00000265  C6 05 00000061 R			mov response,0
	   00
 0000026C  46					inc esi
 0000026D  E9 FFFFFF70				jmp CheckAll
 00000272			EndCheck:	
						ret
 00000275			Death ENDP

				END main

Microsoft (R) Macro Assembler Version 11.00.61030.0	    04/13/15 15:40:05
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000006E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000275 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Death  . . . . . . . . . . . . .	P Near	 000001DB _TEXT	Length= 0000009A Public STDCALL
  CheckAll . . . . . . . . . . .	L Near	 000001E2 _TEXT	
  If4  . . . . . . . . . . . . .	L Near	 000001E2 _TEXT	
  then4  . . . . . . . . . . . .	L Near	 000001FE _TEXT	
  loop1  . . . . . . . . . . . .	L Near	 0000021D _TEXT	
  answer . . . . . . . . . . . .	L Near	 00000245 _TEXT	
  yes  . . . . . . . . . . . . .	L Near	 00000265 _TEXT	
  EndCheck . . . . . . . . . . .	L Near	 00000272 _TEXT	
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FillArray  . . . . . . . . . . .	P Near	 00000084 _TEXT	Length= 00000024 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 00000093 _TEXT	
  endL1  . . . . . . . . . . . .	L Near	 000000A5 _TEXT	
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LeftIf . . . . . . . . . . . . .	P Near	 0000012A _TEXT	Length= 0000002C Public STDCALL
  Then2  . . . . . . . . . . . .	L Near	 00000132 _TEXT	
  if6  . . . . . . . . . . . . .	L Near	 00000138 _TEXT	
  then6  . . . . . . . . . . . .	L Near	 00000143 _TEXT	
  end6 . . . . . . . . . . . . .	L Near	 0000014A _TEXT	
  endleft  . . . . . . . . . . .	L Near	 00000154 _TEXT	
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RightIf  . . . . . . . . . . . .	P Near	 00000110 _TEXT	Length= 0000001A Public STDCALL
  Then1  . . . . . . . . . . . .	L Near	 00000118 _TEXT	
  endright . . . . . . . . . . .	L Near	 00000128 _TEXT	
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StartPosition  . . . . . . . . .	P Near	 00000156 _TEXT	Length= 0000001E Public STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
checkY . . . . . . . . . . . . .	P Near	 000000A8 _TEXT	Length= 0000003E Public STDCALL
  CheckAll . . . . . . . . . . .	L Near	 000000AD _TEXT	
  _there . . . . . . . . . . . .	L Near	 000000BE _TEXT	
  _endif1  . . . . . . . . . . .	L Near	 000000E5 _TEXT	
  EndCheck . . . . . . . . . . .	L Near	 000000E5 _TEXT	
fall . . . . . . . . . . . . . .	P Near	 000000E6 _TEXT	Length= 0000002A Public STDCALL
  All  . . . . . . . . . . . . .	L Near	 000000F5 _TEXT	
  EndAll . . . . . . . . . . . .	L Near	 0000010A _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000084 Public STDCALL
  KeyLoop  . . . . . . . . . . .	L Near	 00000060 _TEXT	
  EndLoop  . . . . . . . . . . .	L Near	 0000007D _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
print  . . . . . . . . . . . . .	P Near	 00000174 _TEXT	Length= 00000067 Public STDCALL
  PrintAll . . . . . . . . . . .	L Near	 0000017F _TEXT	
  if5  . . . . . . . . . . . . .	L Near	 000001B5 _TEXT	
  then5  . . . . . . . . . . . .	L Near	 000001C0 _TEXT	
  end5 . . . . . . . . . . . . .	L Near	 000001C4 _TEXT	
  EndPrint . . . . . . . . . . .	L Near	 000001D9 _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WindowRect . . . . . . . . . . .	SMALL_RECT  00000066 _DATA	
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
beginX . . . . . . . . . . . . .	Byte	 0000003D _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
deathMessage . . . . . . . . . .	Byte	 0000003E _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
outHandle  . . . . . . . . . . .	DWord	 00000062 _DATA	
rainArray  . . . . . . . . . . .	Byte	 00000022 _DATA	
randPos  . . . . . . . . . . . .	DWord	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
replay . . . . . . . . . . . . .	Byte	 0000004F _DATA	
response . . . . . . . . . . . .	Byte	 00000061 _DATA	
titleStr . . . . . . . . . . . .	Byte	 00000031 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xArray . . . . . . . . . . . . .	Byte	 00000013 _DATA	
yArray . . . . . . . . . . . . .	Byte	 00000004 _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
